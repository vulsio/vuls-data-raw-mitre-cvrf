{
	"title": "CVE-2020-11105",
	"cve": "CVE-2020-11105",
	"notes": {
		"description": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
		"published": "2020-03-30",
		"modified": "2020-03-30"
	},
	"references": [
		{
			"url": "https://github.com/USCiLab/cereal/issues/636",
			"description": "MISC:https://github.com/USCiLab/cereal/issues/636"
		}
	]
}
