{
  "title": "CVE-2022-35948",
  "cve": "CVE-2022-35948",
  "notes": {
    "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
    "published": "2022-08-13",
    "modified": "2022-08-13"
  },
  "references": [
    {
      "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
      "description": "CONFIRM:https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
    },
    {
      "url": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80",
      "description": "MISC:https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
    },
    {
      "url": "https://github.com/nodejs/undici/releases/tag/v5.8.2",
      "description": "MISC:https://github.com/nodejs/undici/releases/tag/v5.8.2"
    }
  ]
}
