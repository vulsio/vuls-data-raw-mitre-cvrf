{
	"title": "CVE-2023-52767",
	"cve": "CVE-2023-52767",
	"notes": {
		"description": "In the Linux kernel, the following vulnerability has been resolved: tls: fix NULL deref on tls_sw_splice_eof() with empty record syzkaller discovered that if tls_sw_splice_eof() is executed as part of sendfile() when the plaintext/ciphertext sk_msg are empty, the send path gets confused because the empty ciphertext buffer does not have enough space for the encryption overhead. This causes tls_push_record() to go on the `split = true` path (which is only supposed to be used when interacting with an attached BPF program), and then get further confused and hit the tls_merge_open_record() path, which then assumes that there must be at least one populated buffer element, leading to a NULL deref. It is possible to have empty plaintext/ciphertext buffers if we previously bailed from tls_sw_sendmsg_locked() via the tls_trim_both_msgs() path. tls_sw_push_pending_record() already handles this case correctly; let's do the same check in tls_sw_splice_eof().",
		"published": "2024-05-21",
		"modified": "2024-05-29"
	},
	"references": [
		{
			"url": "https://git.kernel.org/stable/c/2214e2bb5489145aba944874d0ee1652a0a63dc8",
			"description": "MISC:https://git.kernel.org/stable/c/2214e2bb5489145aba944874d0ee1652a0a63dc8"
		},
		{
			"url": "https://git.kernel.org/stable/c/53f2cb491b500897a619ff6abd72f565933760f0",
			"description": "MISC:https://git.kernel.org/stable/c/53f2cb491b500897a619ff6abd72f565933760f0"
		},
		{
			"url": "https://git.kernel.org/stable/c/944900fe2736c07288efe2d9394db4d3ca23f2c9",
			"description": "MISC:https://git.kernel.org/stable/c/944900fe2736c07288efe2d9394db4d3ca23f2c9"
		}
	]
}
