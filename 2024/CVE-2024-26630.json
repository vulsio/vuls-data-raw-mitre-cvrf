{
	"title": "CVE-2024-26630",
	"cve": "CVE-2024-26630",
	"notes": {
		"description": "In the Linux kernel, the following vulnerability has been resolved: mm: cachestat: fix folio read-after-free in cache walk In cachestat, we access the folio from the page cache's xarray to compute its page offset, and check for its dirty and writeback flags. However, we do not hold a reference to the folio before performing these actions, which means the folio can concurrently be released and reused as another folio/page/slab. Get around this altogether by just using xarray's existing machinery for the folio page offsets and dirty/writeback states. This changes behavior for tmpfs files to now always report zeroes in their dirty and writeback counters. This is okay as tmpfs doesn't follow conventional writeback cache behavior: its pages get \"cleaned\" during swapout, after which they're no longer resident etc.",
		"published": "2024-03-13",
		"modified": "2024-03-13"
	},
	"references": [
		{
			"url": "https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804",
			"description": "MISC:https://git.kernel.org/stable/c/3a75cb05d53f4a6823a32deb078de1366954a804"
		},
		{
			"url": "https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117",
			"description": "MISC:https://git.kernel.org/stable/c/ba60fdf75e89ea762bb617be578dc47f27655117"
		},
		{
			"url": "https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c",
			"description": "MISC:https://git.kernel.org/stable/c/fe7e008e0ce728252e4ec652cceebcc62211657c"
		}
	]
}
