{
	"title": "CVE-2024-26696",
	"cve": "CVE-2024-26696",
	"notes": {
		"description": "In the Linux kernel, the following vulnerability has been resolved: nilfs2: fix hang in nilfs_lookup_dirty_data_buffers() Syzbot reported a hang issue in migrate_pages_batch() called by mbind() and nilfs_lookup_dirty_data_buffers() called in the log writer of nilfs2. While migrate_pages_batch() locks a folio and waits for the writeback to complete, the log writer thread that should bring the writeback to completion picks up the folio being written back in nilfs_lookup_dirty_data_buffers() that it calls for subsequent log creation and was trying to lock the folio. Thus causing a deadlock. In the first place, it is unexpected that folios/pages in the middle of writeback will be updated and become dirty. Nilfs2 adds a checksum to verify the validity of the log being written and uses it for recovery at mount, so data changes during writeback are suppressed. Since this is broken, an unclean shutdown could potentially cause recovery to fail. Investigation revealed that the root cause is that the wait for writeback completion in nilfs_page_mkwrite() is conditional, and if the backing device does not require stable writes, data may be modified without waiting. Fix these issues by making nilfs_page_mkwrite() wait for writeback to finish regardless of the stable write requirement of the backing device.",
		"published": "2024-04-03",
		"modified": "2024-04-03"
	},
	"references": [
		{
			"url": "https://git.kernel.org/stable/c/228742b2ddfb99dfd71e5a307e6088ab6836272e",
			"description": "MISC:https://git.kernel.org/stable/c/228742b2ddfb99dfd71e5a307e6088ab6836272e"
		},
		{
			"url": "https://git.kernel.org/stable/c/38296afe3c6ee07319e01bb249aa4bb47c07b534",
			"description": "MISC:https://git.kernel.org/stable/c/38296afe3c6ee07319e01bb249aa4bb47c07b534"
		},
		{
			"url": "https://git.kernel.org/stable/c/7e9b622bd0748cc104d66535b76d9b3535f9dc0f",
			"description": "MISC:https://git.kernel.org/stable/c/7e9b622bd0748cc104d66535b76d9b3535f9dc0f"
		},
		{
			"url": "https://git.kernel.org/stable/c/8494ba2c9ea00a54d5b50e69b22c55a8958bce32",
			"description": "MISC:https://git.kernel.org/stable/c/8494ba2c9ea00a54d5b50e69b22c55a8958bce32"
		},
		{
			"url": "https://git.kernel.org/stable/c/862ee4422c38be5c249844a684b00d0dbe9d1e46",
			"description": "MISC:https://git.kernel.org/stable/c/862ee4422c38be5c249844a684b00d0dbe9d1e46"
		},
		{
			"url": "https://git.kernel.org/stable/c/98a4026b22ff440c7f47056481bcbbe442f607d6",
			"description": "MISC:https://git.kernel.org/stable/c/98a4026b22ff440c7f47056481bcbbe442f607d6"
		},
		{
			"url": "https://git.kernel.org/stable/c/e38585401d464578d30f5868ff4ca54475c34f7d",
			"description": "MISC:https://git.kernel.org/stable/c/e38585401d464578d30f5868ff4ca54475c34f7d"
		},
		{
			"url": "https://git.kernel.org/stable/c/ea5ddbc11613b55e5128c85f57b08f907abd9b28",
			"description": "MISC:https://git.kernel.org/stable/c/ea5ddbc11613b55e5128c85f57b08f907abd9b28"
		}
	]
}
